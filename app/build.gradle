plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    namespace 'br.com.alura.orgs'
    compileSdk 33

    defaultConfig {
        applicationId "br.com.alura.orgs"
        minSdk 22
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//      Fazemos essa configuração para gerar o schema do banco de dados
//      Isso nos ajudará a trabalhar com migrations
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                      "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def room_version = "2.5.1"

    implementation "androidx.room:room-runtime:$room_version"
//  Utilizamos o kapt no lugar do annotationProcessor para ele funcionar para o kotlin
//  O annotationProcessor funciona só para Java
    kapt "androidx.room:room-compiler:$room_version"
//  Possibilita usar coroutines com o room
    implementation "androidx.room:room-ktx:$room_version"

    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'

//  Processamento de imagem via url
    implementation "io.coil-kt:coil:1.2.2"
//  Processamento de gif via url
    implementation "io.coil-kt:coil-gif:1.2.2"
//  Trabalho com coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
//  Escopos do lifecycle
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'

//    O lifecycle estava dando erro de classe duplicada
//    Isso resolveu o erro!
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.8.0") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.0") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}